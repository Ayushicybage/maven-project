name: CI Pipeline

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]
  workflow_dispatch:  # manual trigger

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      # 1️⃣ Checkout repo
      - name: Checkout repository
        uses: actions/checkout@v4

      # 2️⃣ Set up JDK (example: Java project, you can replace with Node/other setup)
      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: 17

      # 3️⃣ Cache dependencies (Maven example)
      - name: Cache Maven packages
        uses: actions/cache@v4
        with:
          path: ~/.m2/repository
          key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
          restore-keys: ${{ runner.os }}-maven-

      # 4️⃣ Install dependencies & build
      - name: Build with Maven
        run: mvn clean install -DskipTests

      # 5️⃣ Run tests
      - name: Run Unit Tests
        run: mvn test

      # 6️⃣ SonarQube Scan
      - name: SonarQube Scan
        uses: sonarsource/sonarqube-scan-action@v2
        with:
          projectBaseDir: .
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
          SONAR_HOST_URL: ${{ secrets.SONAR_HOST_URL }}

      # 7️⃣ Package distributable (JAR in case of Java)
      - name: Package Application
        run: mvn package -DskipTests

      # 8️⃣ Upload artifact (distributable JAR, WAR, ZIP, etc.)
      - name: Upload build artifact
        uses: actions/upload-artifact@v4
        with:
          name: distributable
          path: target/*.jar
